name: Update Database

on:
  schedule:
    - cron: '0 12 * * 1-5'  # Run every weekday at 20:00 UTC+8 (12:00 UTC)
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-db:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - run: mkdir -p tmp

      - name: Fetch lateset date in DB
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          npx wrangler d1 execute open165 --command 'SELECT max(endDate) AS latestDate FROM ScamSiteRecord' --json --remote > tmp/latest-date.json &&\
          cat tmp/latest-date.json

      - name: Set latest date
        id: latest-date
        run: echo "DATA=$(cat tmp/latest-date.json | jq -r '.[0].results[0].latestDate')" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Generate SQL file
        env:
          LATEST_DATE: ${{ steps.latest-date.outputs.DATA }}
        run: npm run predb:seed

      - name: Update database
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: npx wrangler d1 execute open165 --file tmp/scamSiteRecord.sql --remote
        # Only update the database if the SQL file is not empty
        # Ref: https://stackoverflow.com/a/77081661/1582110
        if: ${{ hashFiles('tmp/scamSiteRecord.sql') != '' }}
